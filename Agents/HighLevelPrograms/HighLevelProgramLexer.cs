//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\EDGolog\LanguageRecognition\HighLevelProgram.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace LanguageRecognition {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class HighLevelProgramLexer : Lexer {
	public const int
		IF=1, THEN=2, ELSE=3, ENDIF=4, WHILE=5, DO=6, ENDWHILE=7, LB=8, RB=9, 
		COLON=10, SEMICOLON=11, QM=12, COMMA=13, POINT=14, UL=15, DASH=16, AND=17, 
		OR=18, NOT=19, IMPLY=20, FORALL=21, EXISTS=22, LETTER=23, DIGIT=24, NAME=25, 
		CHAR=26, NUMBER=27, DECIMAL=28, VAR=29, FUNSYM=30, WS=31;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"'if'", "'then'", "'else'", "'endif'", "'while'", "'do'", "'endwhile'", 
		"'('", "')'", "':'", "';'", "'?'", "','", "'.'", "'_'", "'-'", "'and'", 
		"'or'", "'not'", "'imply'", "'forall'", "'exists'", "LETTER", "DIGIT", 
		"NAME", "CHAR", "NUMBER", "DECIMAL", "VAR", "FUNSYM", "WS"
	};
	public static readonly string[] ruleNames = {
		"IF", "THEN", "ELSE", "ENDIF", "WHILE", "DO", "ENDWHILE", "LB", "RB", 
		"COLON", "SEMICOLON", "QM", "COMMA", "POINT", "UL", "DASH", "AND", "OR", 
		"NOT", "IMPLY", "FORALL", "EXISTS", "LETTER", "DIGIT", "NAME", "CHAR", 
		"NUMBER", "DECIMAL", "VAR", "FUNSYM", "WS"
	};


	public HighLevelProgramLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "HighLevelProgram.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2!\xC2\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x3\x2"+
		"\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6"+
		"\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
		"\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A"+
		"\x3\x1A\a\x1A\x9E\n\x1A\f\x1A\xE\x1A\xA1\v\x1A\x3\x1B\x3\x1B\x3\x1B\x3"+
		"\x1B\x5\x1B\xA7\n\x1B\x3\x1C\x6\x1C\xAA\n\x1C\r\x1C\xE\x1C\xAB\x3\x1C"+
		"\x5\x1C\xAF\n\x1C\x3\x1D\x3\x1D\x6\x1D\xB3\n\x1D\r\x1D\xE\x1D\xB4\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x6 \xBD\n \r \xE \xBE\x3 \x3 \x2\x2\x2"+
		"!\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13"+
		"\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2"+
		"\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A"+
		"\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x3\x2\x5"+
		"\x4\x2\x43\\\x63|\x3\x2\x32;\x5\x2\v\f\xF\xF\"\"\xC9\x2\x3\x3\x2\x2\x2"+
		"\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2"+
		"\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2"+
		"\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3"+
		"\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3"+
		"\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2"+
		"\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2"+
		"\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2"+
		"\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x3\x41\x3\x2\x2\x2\x5\x44\x3\x2"+
		"\x2\x2\aI\x3\x2\x2\x2\tN\x3\x2\x2\x2\vT\x3\x2\x2\x2\rZ\x3\x2\x2\x2\xF"+
		"]\x3\x2\x2\x2\x11\x66\x3\x2\x2\x2\x13h\x3\x2\x2\x2\x15j\x3\x2\x2\x2\x17"+
		"l\x3\x2\x2\x2\x19n\x3\x2\x2\x2\x1Bp\x3\x2\x2\x2\x1Dr\x3\x2\x2\x2\x1Ft"+
		"\x3\x2\x2\x2!v\x3\x2\x2\x2#x\x3\x2\x2\x2%|\x3\x2\x2\x2\'\x7F\x3\x2\x2"+
		"\x2)\x83\x3\x2\x2\x2+\x89\x3\x2\x2\x2-\x90\x3\x2\x2\x2/\x97\x3\x2\x2\x2"+
		"\x31\x99\x3\x2\x2\x2\x33\x9B\x3\x2\x2\x2\x35\xA6\x3\x2\x2\x2\x37\xA9\x3"+
		"\x2\x2\x2\x39\xB0\x3\x2\x2\x2;\xB6\x3\x2\x2\x2=\xB9\x3\x2\x2\x2?\xBC\x3"+
		"\x2\x2\x2\x41\x42\ak\x2\x2\x42\x43\ah\x2\x2\x43\x4\x3\x2\x2\x2\x44\x45"+
		"\av\x2\x2\x45\x46\aj\x2\x2\x46G\ag\x2\x2GH\ap\x2\x2H\x6\x3\x2\x2\x2IJ"+
		"\ag\x2\x2JK\an\x2\x2KL\au\x2\x2LM\ag\x2\x2M\b\x3\x2\x2\x2NO\ag\x2\x2O"+
		"P\ap\x2\x2PQ\a\x66\x2\x2QR\ak\x2\x2RS\ah\x2\x2S\n\x3\x2\x2\x2TU\ay\x2"+
		"\x2UV\aj\x2\x2VW\ak\x2\x2WX\an\x2\x2XY\ag\x2\x2Y\f\x3\x2\x2\x2Z[\a\x66"+
		"\x2\x2[\\\aq\x2\x2\\\xE\x3\x2\x2\x2]^\ag\x2\x2^_\ap\x2\x2_`\a\x66\x2\x2"+
		"`\x61\ay\x2\x2\x61\x62\aj\x2\x2\x62\x63\ak\x2\x2\x63\x64\an\x2\x2\x64"+
		"\x65\ag\x2\x2\x65\x10\x3\x2\x2\x2\x66g\a*\x2\x2g\x12\x3\x2\x2\x2hi\a+"+
		"\x2\x2i\x14\x3\x2\x2\x2jk\a<\x2\x2k\x16\x3\x2\x2\x2lm\a=\x2\x2m\x18\x3"+
		"\x2\x2\x2no\a\x41\x2\x2o\x1A\x3\x2\x2\x2pq\a.\x2\x2q\x1C\x3\x2\x2\x2r"+
		"s\a\x30\x2\x2s\x1E\x3\x2\x2\x2tu\a\x61\x2\x2u \x3\x2\x2\x2vw\a/\x2\x2"+
		"w\"\x3\x2\x2\x2xy\a\x63\x2\x2yz\ap\x2\x2z{\a\x66\x2\x2{$\x3\x2\x2\x2|"+
		"}\aq\x2\x2}~\at\x2\x2~&\x3\x2\x2\x2\x7F\x80\ap\x2\x2\x80\x81\aq\x2\x2"+
		"\x81\x82\av\x2\x2\x82(\x3\x2\x2\x2\x83\x84\ak\x2\x2\x84\x85\ao\x2\x2\x85"+
		"\x86\ar\x2\x2\x86\x87\an\x2\x2\x87\x88\a{\x2\x2\x88*\x3\x2\x2\x2\x89\x8A"+
		"\ah\x2\x2\x8A\x8B\aq\x2\x2\x8B\x8C\at\x2\x2\x8C\x8D\a\x63\x2\x2\x8D\x8E"+
		"\an\x2\x2\x8E\x8F\an\x2\x2\x8F,\x3\x2\x2\x2\x90\x91\ag\x2\x2\x91\x92\a"+
		"z\x2\x2\x92\x93\ak\x2\x2\x93\x94\au\x2\x2\x94\x95\av\x2\x2\x95\x96\au"+
		"\x2\x2\x96.\x3\x2\x2\x2\x97\x98\t\x2\x2\x2\x98\x30\x3\x2\x2\x2\x99\x9A"+
		"\t\x3\x2\x2\x9A\x32\x3\x2\x2\x2\x9B\x9F\x5/\x18\x2\x9C\x9E\x5\x35\x1B"+
		"\x2\x9D\x9C\x3\x2\x2\x2\x9E\xA1\x3\x2\x2\x2\x9F\x9D\x3\x2\x2\x2\x9F\xA0"+
		"\x3\x2\x2\x2\xA0\x34\x3\x2\x2\x2\xA1\x9F\x3\x2\x2\x2\xA2\xA7\x5/\x18\x2"+
		"\xA3\xA7\x5\x31\x19\x2\xA4\xA7\x5!\x11\x2\xA5\xA7\x5\x1F\x10\x2\xA6\xA2"+
		"\x3\x2\x2\x2\xA6\xA3\x3\x2\x2\x2\xA6\xA4\x3\x2\x2\x2\xA6\xA5\x3\x2\x2"+
		"\x2\xA7\x36\x3\x2\x2\x2\xA8\xAA\x5\x31\x19\x2\xA9\xA8\x3\x2\x2\x2\xAA"+
		"\xAB\x3\x2\x2\x2\xAB\xA9\x3\x2\x2\x2\xAB\xAC\x3\x2\x2\x2\xAC\xAE\x3\x2"+
		"\x2\x2\xAD\xAF\x5\x39\x1D\x2\xAE\xAD\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF"+
		"\x38\x3\x2\x2\x2\xB0\xB2\x5\x1D\xF\x2\xB1\xB3\x5\x31\x19\x2\xB2\xB1\x3"+
		"\x2\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2"+
		"\xB5:\x3\x2\x2\x2\xB6\xB7\x5\x19\r\x2\xB7\xB8\x5\x33\x1A\x2\xB8<\x3\x2"+
		"\x2\x2\xB9\xBA\x5\x33\x1A\x2\xBA>\x3\x2\x2\x2\xBB\xBD\t\x4\x2\x2\xBC\xBB"+
		"\x3\x2\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE\xBC\x3\x2\x2\x2\xBE\xBF\x3\x2\x2"+
		"\x2\xBF\xC0\x3\x2\x2\x2\xC0\xC1\b \x2\x2\xC1@\x3\x2\x2\x2\t\x2\x9F\xA6"+
		"\xAB\xAE\xB4\xBE\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LanguageRecognition
