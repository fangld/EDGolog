//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\EDGolog\LanguageRecognition\HighLevelProgram.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace LanguageRecognition {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class HighLevelProgramLexer : Lexer {
	public const int
		IF=1, THEN=2, ELSE=3, ENDIF=4, WHILE=5, DO=6, ENDWHILE=7, KNOW=8, BEL=9, 
		LB=10, RB=11, COLON=12, SEMICOLON=13, QM=14, COMMA=15, POINT=16, UL=17, 
		DASH=18, AND=19, OR=20, NOT=21, IMPLY=22, FORALL=23, EXISTS=24, LETTER=25, 
		DIGIT=26, NAME=27, CHAR=28, NUMBER=29, DECIMAL=30, VAR=31, FUNSYM=32, 
		WS=33;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"'if'", "'then'", "'else'", "'endif'", "'while'", "'do'", "'endwhile'", 
		"'know'", "'bel'", "'('", "')'", "':'", "';'", "'?'", "','", "'.'", "'_'", 
		"'-'", "'and'", "'or'", "'not'", "'imply'", "'forall'", "'exists'", "LETTER", 
		"DIGIT", "NAME", "CHAR", "NUMBER", "DECIMAL", "VAR", "FUNSYM", "WS"
	};
	public static readonly string[] ruleNames = {
		"IF", "THEN", "ELSE", "ENDIF", "WHILE", "DO", "ENDWHILE", "KNOW", "BEL", 
		"LB", "RB", "COLON", "SEMICOLON", "QM", "COMMA", "POINT", "UL", "DASH", 
		"AND", "OR", "NOT", "IMPLY", "FORALL", "EXISTS", "LETTER", "DIGIT", "NAME", 
		"CHAR", "NUMBER", "DECIMAL", "VAR", "FUNSYM", "WS"
	};


	public HighLevelProgramLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "HighLevelProgram.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2#\xCF\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v"+
		"\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15"+
		"\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19"+
		"\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C"+
		"\x3\x1C\a\x1C\xAB\n\x1C\f\x1C\xE\x1C\xAE\v\x1C\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x5\x1D\xB4\n\x1D\x3\x1E\x6\x1E\xB7\n\x1E\r\x1E\xE\x1E\xB8\x3\x1E"+
		"\x5\x1E\xBC\n\x1E\x3\x1F\x3\x1F\x6\x1F\xC0\n\x1F\r\x1F\xE\x1F\xC1\x3 "+
		"\x3 \x3 \x3!\x3!\x3\"\x6\"\xCA\n\"\r\"\xE\"\xCB\x3\"\x3\"\x2\x2\x2#\x3"+
		"\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2"+
		"\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12"+
		"#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33"+
		"\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43"+
		"\x2#\x3\x2\x5\x4\x2\x43\\\x63|\x3\x2\x32;\x5\x2\v\f\xF\xF\"\"\xD6\x2\x3"+
		"\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v"+
		"\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2"+
		"\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2"+
		"\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2"+
		"\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2"+
		"\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2"+
		"\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2"+
		"\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2"+
		"\x2\x43\x3\x2\x2\x2\x3\x45\x3\x2\x2\x2\x5H\x3\x2\x2\x2\aM\x3\x2\x2\x2"+
		"\tR\x3\x2\x2\x2\vX\x3\x2\x2\x2\r^\x3\x2\x2\x2\xF\x61\x3\x2\x2\x2\x11j"+
		"\x3\x2\x2\x2\x13o\x3\x2\x2\x2\x15s\x3\x2\x2\x2\x17u\x3\x2\x2\x2\x19w\x3"+
		"\x2\x2\x2\x1By\x3\x2\x2\x2\x1D{\x3\x2\x2\x2\x1F}\x3\x2\x2\x2!\x7F\x3\x2"+
		"\x2\x2#\x81\x3\x2\x2\x2%\x83\x3\x2\x2\x2\'\x85\x3\x2\x2\x2)\x89\x3\x2"+
		"\x2\x2+\x8C\x3\x2\x2\x2-\x90\x3\x2\x2\x2/\x96\x3\x2\x2\x2\x31\x9D\x3\x2"+
		"\x2\x2\x33\xA4\x3\x2\x2\x2\x35\xA6\x3\x2\x2\x2\x37\xA8\x3\x2\x2\x2\x39"+
		"\xB3\x3\x2\x2\x2;\xB6\x3\x2\x2\x2=\xBD\x3\x2\x2\x2?\xC3\x3\x2\x2\x2\x41"+
		"\xC6\x3\x2\x2\x2\x43\xC9\x3\x2\x2\x2\x45\x46\ak\x2\x2\x46G\ah\x2\x2G\x4"+
		"\x3\x2\x2\x2HI\av\x2\x2IJ\aj\x2\x2JK\ag\x2\x2KL\ap\x2\x2L\x6\x3\x2\x2"+
		"\x2MN\ag\x2\x2NO\an\x2\x2OP\au\x2\x2PQ\ag\x2\x2Q\b\x3\x2\x2\x2RS\ag\x2"+
		"\x2ST\ap\x2\x2TU\a\x66\x2\x2UV\ak\x2\x2VW\ah\x2\x2W\n\x3\x2\x2\x2XY\a"+
		"y\x2\x2YZ\aj\x2\x2Z[\ak\x2\x2[\\\an\x2\x2\\]\ag\x2\x2]\f\x3\x2\x2\x2^"+
		"_\a\x66\x2\x2_`\aq\x2\x2`\xE\x3\x2\x2\x2\x61\x62\ag\x2\x2\x62\x63\ap\x2"+
		"\x2\x63\x64\a\x66\x2\x2\x64\x65\ay\x2\x2\x65\x66\aj\x2\x2\x66g\ak\x2\x2"+
		"gh\an\x2\x2hi\ag\x2\x2i\x10\x3\x2\x2\x2jk\am\x2\x2kl\ap\x2\x2lm\aq\x2"+
		"\x2mn\ay\x2\x2n\x12\x3\x2\x2\x2op\a\x64\x2\x2pq\ag\x2\x2qr\an\x2\x2r\x14"+
		"\x3\x2\x2\x2st\a*\x2\x2t\x16\x3\x2\x2\x2uv\a+\x2\x2v\x18\x3\x2\x2\x2w"+
		"x\a<\x2\x2x\x1A\x3\x2\x2\x2yz\a=\x2\x2z\x1C\x3\x2\x2\x2{|\a\x41\x2\x2"+
		"|\x1E\x3\x2\x2\x2}~\a.\x2\x2~ \x3\x2\x2\x2\x7F\x80\a\x30\x2\x2\x80\"\x3"+
		"\x2\x2\x2\x81\x82\a\x61\x2\x2\x82$\x3\x2\x2\x2\x83\x84\a/\x2\x2\x84&\x3"+
		"\x2\x2\x2\x85\x86\a\x63\x2\x2\x86\x87\ap\x2\x2\x87\x88\a\x66\x2\x2\x88"+
		"(\x3\x2\x2\x2\x89\x8A\aq\x2\x2\x8A\x8B\at\x2\x2\x8B*\x3\x2\x2\x2\x8C\x8D"+
		"\ap\x2\x2\x8D\x8E\aq\x2\x2\x8E\x8F\av\x2\x2\x8F,\x3\x2\x2\x2\x90\x91\a"+
		"k\x2\x2\x91\x92\ao\x2\x2\x92\x93\ar\x2\x2\x93\x94\an\x2\x2\x94\x95\a{"+
		"\x2\x2\x95.\x3\x2\x2\x2\x96\x97\ah\x2\x2\x97\x98\aq\x2\x2\x98\x99\at\x2"+
		"\x2\x99\x9A\a\x63\x2\x2\x9A\x9B\an\x2\x2\x9B\x9C\an\x2\x2\x9C\x30\x3\x2"+
		"\x2\x2\x9D\x9E\ag\x2\x2\x9E\x9F\az\x2\x2\x9F\xA0\ak\x2\x2\xA0\xA1\au\x2"+
		"\x2\xA1\xA2\av\x2\x2\xA2\xA3\au\x2\x2\xA3\x32\x3\x2\x2\x2\xA4\xA5\t\x2"+
		"\x2\x2\xA5\x34\x3\x2\x2\x2\xA6\xA7\t\x3\x2\x2\xA7\x36\x3\x2\x2\x2\xA8"+
		"\xAC\x5\x33\x1A\x2\xA9\xAB\x5\x39\x1D\x2\xAA\xA9\x3\x2\x2\x2\xAB\xAE\x3"+
		"\x2\x2\x2\xAC\xAA\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\x38\x3\x2\x2\x2"+
		"\xAE\xAC\x3\x2\x2\x2\xAF\xB4\x5\x33\x1A\x2\xB0\xB4\x5\x35\x1B\x2\xB1\xB4"+
		"\x5%\x13\x2\xB2\xB4\x5#\x12\x2\xB3\xAF\x3\x2\x2\x2\xB3\xB0\x3\x2\x2\x2"+
		"\xB3\xB1\x3\x2\x2\x2\xB3\xB2\x3\x2\x2\x2\xB4:\x3\x2\x2\x2\xB5\xB7\x5\x35"+
		"\x1B\x2\xB6\xB5\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xB6\x3\x2\x2\x2\xB8"+
		"\xB9\x3\x2\x2\x2\xB9\xBB\x3\x2\x2\x2\xBA\xBC\x5=\x1F\x2\xBB\xBA\x3\x2"+
		"\x2\x2\xBB\xBC\x3\x2\x2\x2\xBC<\x3\x2\x2\x2\xBD\xBF\x5!\x11\x2\xBE\xC0"+
		"\x5\x35\x1B\x2\xBF\xBE\x3\x2\x2\x2\xC0\xC1\x3\x2\x2\x2\xC1\xBF\x3\x2\x2"+
		"\x2\xC1\xC2\x3\x2\x2\x2\xC2>\x3\x2\x2\x2\xC3\xC4\x5\x1D\xF\x2\xC4\xC5"+
		"\x5\x37\x1C\x2\xC5@\x3\x2\x2\x2\xC6\xC7\x5\x37\x1C\x2\xC7\x42\x3\x2\x2"+
		"\x2\xC8\xCA\t\x4\x2\x2\xC9\xC8\x3\x2\x2\x2\xCA\xCB\x3\x2\x2\x2\xCB\xC9"+
		"\x3\x2\x2\x2\xCB\xCC\x3\x2\x2\x2\xCC\xCD\x3\x2\x2\x2\xCD\xCE\b\"\x2\x2"+
		"\xCE\x44\x3\x2\x2\x2\t\x2\xAC\xB3\xB8\xBB\xC1\xCB\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LanguageRecognition
