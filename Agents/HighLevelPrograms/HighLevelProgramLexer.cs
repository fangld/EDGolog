//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\EDGolog\LanguageRecognition\HighLevelProgram.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace LanguageRecognition {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class HighLevelProgramLexer : Lexer {
	public const int
		IF=1, THEN=2, ELSE=3, ENDIF=4, WHILE=5, DO=6, ENDWHILE=7, LB=8, RB=9, 
		COLON=10, SEMICOLON=11, QM=12, COMMA=13, UL=14, DASH=15, AND=16, OR=17, 
		NOT=18, IMPLY=19, FORALL=20, EXISTS=21, LETTER=22, DIGIT=23, NAME=24, 
		CHAR=25, NUMBER=26, DECIMAL=27, VAR=28, FUNSYM=29, WS=30;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"'if'", "'then'", "'else'", "'endif'", "'while'", "'do'", "'endwhile'", 
		"'('", "')'", "':'", "';'", "'?'", "','", "'_'", "'-'", "'and'", "'or'", 
		"'not'", "'imply'", "'forall'", "'exists'", "LETTER", "DIGIT", "NAME", 
		"CHAR", "NUMBER", "DECIMAL", "VAR", "FUNSYM", "WS"
	};
	public static readonly string[] ruleNames = {
		"IF", "THEN", "ELSE", "ENDIF", "WHILE", "DO", "ENDWHILE", "LB", "RB", 
		"COLON", "SEMICOLON", "QM", "COMMA", "UL", "DASH", "AND", "OR", "NOT", 
		"IMPLY", "FORALL", "EXISTS", "LETTER", "DIGIT", "NAME", "CHAR", "NUMBER", 
		"DECIMAL", "VAR", "FUNSYM", "WS"
	};


	public HighLevelProgramLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "HighLevelProgram.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2 \xBE\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x3\x2\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6"+
		"\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t"+
		"\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10"+
		"\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\a\x19\x9A\n\x19"+
		"\f\x19\xE\x19\x9D\v\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x5\x1A\xA3\n\x1A\x3"+
		"\x1B\x6\x1B\xA6\n\x1B\r\x1B\xE\x1B\xA7\x3\x1B\x5\x1B\xAB\n\x1B\x3\x1C"+
		"\x3\x1C\x6\x1C\xAF\n\x1C\r\x1C\xE\x1C\xB0\x3\x1D\x3\x1D\x3\x1D\x3\x1E"+
		"\x3\x1E\x3\x1F\x6\x1F\xB9\n\x1F\r\x1F\xE\x1F\xBA\x3\x1F\x3\x1F\x2\x2\x2"+
		" \x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13"+
		"\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2"+
		"\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A"+
		"\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 \x3\x2\x5\x4"+
		"\x2\x43\\\x63|\x3\x2\x32;\x5\x2\v\f\xF\xF\"\"\xC5\x2\x3\x3\x2\x2\x2\x2"+
		"\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2"+
		"\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2"+
		"\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2"+
		"\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2"+
		"\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2"+
		"\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2"+
		"\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2"+
		"\x2\x2=\x3\x2\x2\x2\x3?\x3\x2\x2\x2\x5\x42\x3\x2\x2\x2\aG\x3\x2\x2\x2"+
		"\tL\x3\x2\x2\x2\vR\x3\x2\x2\x2\rX\x3\x2\x2\x2\xF[\x3\x2\x2\x2\x11\x64"+
		"\x3\x2\x2\x2\x13\x66\x3\x2\x2\x2\x15h\x3\x2\x2\x2\x17j\x3\x2\x2\x2\x19"+
		"l\x3\x2\x2\x2\x1Bn\x3\x2\x2\x2\x1Dp\x3\x2\x2\x2\x1Fr\x3\x2\x2\x2!t\x3"+
		"\x2\x2\x2#x\x3\x2\x2\x2%{\x3\x2\x2\x2\'\x7F\x3\x2\x2\x2)\x85\x3\x2\x2"+
		"\x2+\x8C\x3\x2\x2\x2-\x93\x3\x2\x2\x2/\x95\x3\x2\x2\x2\x31\x97\x3\x2\x2"+
		"\x2\x33\xA2\x3\x2\x2\x2\x35\xA5\x3\x2\x2\x2\x37\xAC\x3\x2\x2\x2\x39\xB2"+
		"\x3\x2\x2\x2;\xB5\x3\x2\x2\x2=\xB8\x3\x2\x2\x2?@\ak\x2\x2@\x41\ah\x2\x2"+
		"\x41\x4\x3\x2\x2\x2\x42\x43\av\x2\x2\x43\x44\aj\x2\x2\x44\x45\ag\x2\x2"+
		"\x45\x46\ap\x2\x2\x46\x6\x3\x2\x2\x2GH\ag\x2\x2HI\an\x2\x2IJ\au\x2\x2"+
		"JK\ag\x2\x2K\b\x3\x2\x2\x2LM\ag\x2\x2MN\ap\x2\x2NO\a\x66\x2\x2OP\ak\x2"+
		"\x2PQ\ah\x2\x2Q\n\x3\x2\x2\x2RS\ay\x2\x2ST\aj\x2\x2TU\ak\x2\x2UV\an\x2"+
		"\x2VW\ag\x2\x2W\f\x3\x2\x2\x2XY\a\x66\x2\x2YZ\aq\x2\x2Z\xE\x3\x2\x2\x2"+
		"[\\\ag\x2\x2\\]\ap\x2\x2]^\a\x66\x2\x2^_\ay\x2\x2_`\aj\x2\x2`\x61\ak\x2"+
		"\x2\x61\x62\an\x2\x2\x62\x63\ag\x2\x2\x63\x10\x3\x2\x2\x2\x64\x65\a*\x2"+
		"\x2\x65\x12\x3\x2\x2\x2\x66g\a+\x2\x2g\x14\x3\x2\x2\x2hi\a<\x2\x2i\x16"+
		"\x3\x2\x2\x2jk\a=\x2\x2k\x18\x3\x2\x2\x2lm\a\x41\x2\x2m\x1A\x3\x2\x2\x2"+
		"no\a.\x2\x2o\x1C\x3\x2\x2\x2pq\a\x61\x2\x2q\x1E\x3\x2\x2\x2rs\a/\x2\x2"+
		"s \x3\x2\x2\x2tu\a\x63\x2\x2uv\ap\x2\x2vw\a\x66\x2\x2w\"\x3\x2\x2\x2x"+
		"y\aq\x2\x2yz\at\x2\x2z$\x3\x2\x2\x2{|\ap\x2\x2|}\aq\x2\x2}~\av\x2\x2~"+
		"&\x3\x2\x2\x2\x7F\x80\ak\x2\x2\x80\x81\ao\x2\x2\x81\x82\ar\x2\x2\x82\x83"+
		"\an\x2\x2\x83\x84\a{\x2\x2\x84(\x3\x2\x2\x2\x85\x86\ah\x2\x2\x86\x87\a"+
		"q\x2\x2\x87\x88\at\x2\x2\x88\x89\a\x63\x2\x2\x89\x8A\an\x2\x2\x8A\x8B"+
		"\an\x2\x2\x8B*\x3\x2\x2\x2\x8C\x8D\ag\x2\x2\x8D\x8E\az\x2\x2\x8E\x8F\a"+
		"k\x2\x2\x8F\x90\au\x2\x2\x90\x91\av\x2\x2\x91\x92\au\x2\x2\x92,\x3\x2"+
		"\x2\x2\x93\x94\t\x2\x2\x2\x94.\x3\x2\x2\x2\x95\x96\t\x3\x2\x2\x96\x30"+
		"\x3\x2\x2\x2\x97\x9B\x5-\x17\x2\x98\x9A\x5\x33\x1A\x2\x99\x98\x3\x2\x2"+
		"\x2\x9A\x9D\x3\x2\x2\x2\x9B\x99\x3\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C\x32"+
		"\x3\x2\x2\x2\x9D\x9B\x3\x2\x2\x2\x9E\xA3\x5-\x17\x2\x9F\xA3\x5/\x18\x2"+
		"\xA0\xA3\x5\x1F\x10\x2\xA1\xA3\x5\x1D\xF\x2\xA2\x9E\x3\x2\x2\x2\xA2\x9F"+
		"\x3\x2\x2\x2\xA2\xA0\x3\x2\x2\x2\xA2\xA1\x3\x2\x2\x2\xA3\x34\x3\x2\x2"+
		"\x2\xA4\xA6\x5/\x18\x2\xA5\xA4\x3\x2\x2\x2\xA6\xA7\x3\x2\x2\x2\xA7\xA5"+
		"\x3\x2\x2\x2\xA7\xA8\x3\x2\x2\x2\xA8\xAA\x3\x2\x2\x2\xA9\xAB\x5\x37\x1C"+
		"\x2\xAA\xA9\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2\xAB\x36\x3\x2\x2\x2\xAC\xAE"+
		"\x5\x1B\xE\x2\xAD\xAF\x5/\x18\x2\xAE\xAD\x3\x2\x2\x2\xAF\xB0\x3\x2\x2"+
		"\x2\xB0\xAE\x3\x2\x2\x2\xB0\xB1\x3\x2\x2\x2\xB1\x38\x3\x2\x2\x2\xB2\xB3"+
		"\x5\x19\r\x2\xB3\xB4\x5\x31\x19\x2\xB4:\x3\x2\x2\x2\xB5\xB6\x5\x31\x19"+
		"\x2\xB6<\x3\x2\x2\x2\xB7\xB9\t\x4\x2\x2\xB8\xB7\x3\x2\x2\x2\xB9\xBA\x3"+
		"\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\xBC\x3\x2\x2\x2"+
		"\xBC\xBD\b\x1F\x2\x2\xBD>\x3\x2\x2\x2\t\x2\x9B\xA2\xA7\xAA\xB0\xBA\x3"+
		"\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LanguageRecognition
