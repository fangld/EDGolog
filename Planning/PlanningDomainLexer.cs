//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\EDGolog\LanguageRecognition\PlanningDomain.g4 by ANTLR 4.2.1-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace LanguageRecognition {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.1-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class PlanningDomainLexer : Lexer {
	public const int
		LB=1, RB=2, LSB=3, RSB=4, COLON=5, QM=6, COMMA=7, UL=8, DASH=9, PLUS=10, 
		MINUS=11, MULT=12, DIV=13, EQ=14, LT=15, LEQ=16, GT=17, GEQ=18, AND=19, 
		OR=20, NOT=21, IMPLY=22, FORALL=23, EXISTS=24, PREF=25, BINARYCOMP=26, 
		BINARYOP=27, LETTER=28, DIGIT=29, NAME=30, CHAR=31, NUMBER=32, DECIMAL=33, 
		VAR=34, DOM=35, DEF=36, REQ=37, TYPE=38, PRED=39, ACT=40, PARM=41, PRE=42, 
		EFF=43, FUNSYM=44, STRIPS=45, TYPING=46, WS=47;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"'('", "')'", "'['", "']'", "':'", "'?'", "'.'", "'_'", "DASH", "'+'", 
		"MINUS", "'*'", "'/'", "'='", "'<'", "'<='", "'>'", "'>='", "'and'", "'or'", 
		"'not'", "'imply'", "'forall'", "'exists'", "'preference'", "BINARYCOMP", 
		"BINARYOP", "LETTER", "DIGIT", "NAME", "CHAR", "NUMBER", "DECIMAL", "VAR", 
		"'domain'", "'define'", "'requirements'", "'types'", "'predicates'", "'actions'", 
		"'parameters'", "'precondition'", "'effect'", "FUNSYM", "STRIPS", "TYPING", 
		"WS"
	};
	public static readonly string[] ruleNames = {
		"LB", "RB", "LSB", "RSB", "COLON", "QM", "COMMA", "UL", "DASH", "PLUS", 
		"MINUS", "MULT", "DIV", "EQ", "LT", "LEQ", "GT", "GEQ", "AND", "OR", "NOT", 
		"IMPLY", "FORALL", "EXISTS", "PREF", "BINARYCOMP", "BINARYOP", "LETTER", 
		"DIGIT", "NAME", "CHAR", "NUMBER", "DECIMAL", "VAR", "DOM", "DEF", "REQ", 
		"TYPE", "PRED", "ACT", "PARM", "PRE", "EFF", "FUNSYM", "STRIPS", "TYPING", 
		"WS"
	};


	public PlanningDomainLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "PlanningDomain.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x31\x14C\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x3\x2\x3\x2\x3"+
		"\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t"+
		"\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18"+
		"\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5\x1B\xB7\n\x1B\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1C\x5\x1C\xBD\n\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E"+
		"\x3\x1F\x3\x1F\a\x1F\xC5\n\x1F\f\x1F\xE\x1F\xC8\v\x1F\x3 \x3 \x3 \x3 "+
		"\x5 \xCE\n \x3!\x6!\xD1\n!\r!\xE!\xD2\x3!\x5!\xD6\n!\x3\"\x3\"\x6\"\xDA"+
		"\n\"\r\"\xE\"\xDB\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3%\x3%\x3%"+
		"\x3%\x3%\x3%\x3%\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3"+
		"\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3(\x3"+
		"(\x3)\x3)\x3)\x3)\x3)\x3)\x3)\x3)\x3*\x3*\x3*\x3*\x3*\x3*\x3*\x3*\x3*"+
		"\x3*\x3*\x3+\x3+\x3+\x3+\x3+\x3+\x3+\x3+\x3+\x3+\x3+\x3+\x3+\x3,\x3,\x3"+
		",\x3,\x3,\x3,\x3,\x3-\x3-\x3.\x3.\x3.\x3.\x3.\x3.\x3.\x3.\x3/\x3/\x3/"+
		"\x3/\x3/\x3/\x3/\x3/\x3\x30\x6\x30\x147\n\x30\r\x30\xE\x30\x148\x3\x30"+
		"\x3\x30\x2\x2\x2\x31\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF"+
		"\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2"+
		"+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x3\x2\x5\x5\x2\x43\\\x63|~~\x3\x2"+
		"\x32;\x5\x2\v\f\xF\xF\"\"\x15A\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2"+
		"\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2"+
		"\x3\x61\x3\x2\x2\x2\x5\x63\x3\x2\x2\x2\a\x65\x3\x2\x2\x2\tg\x3\x2\x2\x2"+
		"\vi\x3\x2\x2\x2\rk\x3\x2\x2\x2\xFm\x3\x2\x2\x2\x11o\x3\x2\x2\x2\x13q\x3"+
		"\x2\x2\x2\x15s\x3\x2\x2\x2\x17u\x3\x2\x2\x2\x19w\x3\x2\x2\x2\x1By\x3\x2"+
		"\x2\x2\x1D{\x3\x2\x2\x2\x1F}\x3\x2\x2\x2!\x7F\x3\x2\x2\x2#\x82\x3\x2\x2"+
		"\x2%\x84\x3\x2\x2\x2\'\x87\x3\x2\x2\x2)\x8B\x3\x2\x2\x2+\x8E\x3\x2\x2"+
		"\x2-\x92\x3\x2\x2\x2/\x98\x3\x2\x2\x2\x31\x9F\x3\x2\x2\x2\x33\xA6\x3\x2"+
		"\x2\x2\x35\xB6\x3\x2\x2\x2\x37\xBC\x3\x2\x2\x2\x39\xBE\x3\x2\x2\x2;\xC0"+
		"\x3\x2\x2\x2=\xC2\x3\x2\x2\x2?\xCD\x3\x2\x2\x2\x41\xD0\x3\x2\x2\x2\x43"+
		"\xD7\x3\x2\x2\x2\x45\xDD\x3\x2\x2\x2G\xE0\x3\x2\x2\x2I\xE7\x3\x2\x2\x2"+
		"K\xEE\x3\x2\x2\x2M\xFB\x3\x2\x2\x2O\x101\x3\x2\x2\x2Q\x10C\x3\x2\x2\x2"+
		"S\x114\x3\x2\x2\x2U\x11F\x3\x2\x2\x2W\x12C\x3\x2\x2\x2Y\x133\x3\x2\x2"+
		"\x2[\x135\x3\x2\x2\x2]\x13D\x3\x2\x2\x2_\x146\x3\x2\x2\x2\x61\x62\a*\x2"+
		"\x2\x62\x4\x3\x2\x2\x2\x63\x64\a+\x2\x2\x64\x6\x3\x2\x2\x2\x65\x66\a]"+
		"\x2\x2\x66\b\x3\x2\x2\x2gh\a_\x2\x2h\n\x3\x2\x2\x2ij\a<\x2\x2j\f\x3\x2"+
		"\x2\x2kl\a\x41\x2\x2l\xE\x3\x2\x2\x2mn\a\x30\x2\x2n\x10\x3\x2\x2\x2op"+
		"\a\x61\x2\x2p\x12\x3\x2\x2\x2qr\a/\x2\x2r\x14\x3\x2\x2\x2st\a-\x2\x2t"+
		"\x16\x3\x2\x2\x2uv\a/\x2\x2v\x18\x3\x2\x2\x2wx\a,\x2\x2x\x1A\x3\x2\x2"+
		"\x2yz\a\x31\x2\x2z\x1C\x3\x2\x2\x2{|\a?\x2\x2|\x1E\x3\x2\x2\x2}~\a>\x2"+
		"\x2~ \x3\x2\x2\x2\x7F\x80\a>\x2\x2\x80\x81\a?\x2\x2\x81\"\x3\x2\x2\x2"+
		"\x82\x83\a@\x2\x2\x83$\x3\x2\x2\x2\x84\x85\a@\x2\x2\x85\x86\a?\x2\x2\x86"+
		"&\x3\x2\x2\x2\x87\x88\a\x63\x2\x2\x88\x89\ap\x2\x2\x89\x8A\a\x66\x2\x2"+
		"\x8A(\x3\x2\x2\x2\x8B\x8C\aq\x2\x2\x8C\x8D\at\x2\x2\x8D*\x3\x2\x2\x2\x8E"+
		"\x8F\ap\x2\x2\x8F\x90\aq\x2\x2\x90\x91\av\x2\x2\x91,\x3\x2\x2\x2\x92\x93"+
		"\ak\x2\x2\x93\x94\ao\x2\x2\x94\x95\ar\x2\x2\x95\x96\an\x2\x2\x96\x97\a"+
		"{\x2\x2\x97.\x3\x2\x2\x2\x98\x99\ah\x2\x2\x99\x9A\aq\x2\x2\x9A\x9B\at"+
		"\x2\x2\x9B\x9C\a\x63\x2\x2\x9C\x9D\an\x2\x2\x9D\x9E\an\x2\x2\x9E\x30\x3"+
		"\x2\x2\x2\x9F\xA0\ag\x2\x2\xA0\xA1\az\x2\x2\xA1\xA2\ak\x2\x2\xA2\xA3\a"+
		"u\x2\x2\xA3\xA4\av\x2\x2\xA4\xA5\au\x2\x2\xA5\x32\x3\x2\x2\x2\xA6\xA7"+
		"\ar\x2\x2\xA7\xA8\at\x2\x2\xA8\xA9\ag\x2\x2\xA9\xAA\ah\x2\x2\xAA\xAB\a"+
		"g\x2\x2\xAB\xAC\at\x2\x2\xAC\xAD\ag\x2\x2\xAD\xAE\ap\x2\x2\xAE\xAF\a\x65"+
		"\x2\x2\xAF\xB0\ag\x2\x2\xB0\x34\x3\x2\x2\x2\xB1\xB7\x5\x1D\xF\x2\xB2\xB7"+
		"\x5\x1F\x10\x2\xB3\xB7\x5#\x12\x2\xB4\xB7\x5!\x11\x2\xB5\xB7\x5%\x13\x2"+
		"\xB6\xB1\x3\x2\x2\x2\xB6\xB2\x3\x2\x2\x2\xB6\xB3\x3\x2\x2\x2\xB6\xB4\x3"+
		"\x2\x2\x2\xB6\xB5\x3\x2\x2\x2\xB7\x36\x3\x2\x2\x2\xB8\xBD\x5\x15\v\x2"+
		"\xB9\xBD\x5\x17\f\x2\xBA\xBD\x5\x19\r\x2\xBB\xBD\x5\x1B\xE\x2\xBC\xB8"+
		"\x3\x2\x2\x2\xBC\xB9\x3\x2\x2\x2\xBC\xBA\x3\x2\x2\x2\xBC\xBB\x3\x2\x2"+
		"\x2\xBD\x38\x3\x2\x2\x2\xBE\xBF\t\x2\x2\x2\xBF:\x3\x2\x2\x2\xC0\xC1\t"+
		"\x3\x2\x2\xC1<\x3\x2\x2\x2\xC2\xC6\x5\x39\x1D\x2\xC3\xC5\x5? \x2\xC4\xC3"+
		"\x3\x2\x2\x2\xC5\xC8\x3\x2\x2\x2\xC6\xC4\x3\x2\x2\x2\xC6\xC7\x3\x2\x2"+
		"\x2\xC7>\x3\x2\x2\x2\xC8\xC6\x3\x2\x2\x2\xC9\xCE\x5\x39\x1D\x2\xCA\xCE"+
		"\x5;\x1E\x2\xCB\xCE\x5\x13\n\x2\xCC\xCE\x5\x11\t\x2\xCD\xC9\x3\x2\x2\x2"+
		"\xCD\xCA\x3\x2\x2\x2\xCD\xCB\x3\x2\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE@\x3\x2"+
		"\x2\x2\xCF\xD1\x5;\x1E\x2\xD0\xCF\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2\xD2"+
		"\xD0\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\xD5\x3\x2\x2\x2\xD4\xD6\x5\x43"+
		"\"\x2\xD5\xD4\x3\x2\x2\x2\xD5\xD6\x3\x2\x2\x2\xD6\x42\x3\x2\x2\x2\xD7"+
		"\xD9\x5\xF\b\x2\xD8\xDA\x5;\x1E\x2\xD9\xD8\x3\x2\x2\x2\xDA\xDB\x3\x2\x2"+
		"\x2\xDB\xD9\x3\x2\x2\x2\xDB\xDC\x3\x2\x2\x2\xDC\x44\x3\x2\x2\x2\xDD\xDE"+
		"\x5\r\a\x2\xDE\xDF\x5=\x1F\x2\xDF\x46\x3\x2\x2\x2\xE0\xE1\a\x66\x2\x2"+
		"\xE1\xE2\aq\x2\x2\xE2\xE3\ao\x2\x2\xE3\xE4\a\x63\x2\x2\xE4\xE5\ak\x2\x2"+
		"\xE5\xE6\ap\x2\x2\xE6H\x3\x2\x2\x2\xE7\xE8\a\x66\x2\x2\xE8\xE9\ag\x2\x2"+
		"\xE9\xEA\ah\x2\x2\xEA\xEB\ak\x2\x2\xEB\xEC\ap\x2\x2\xEC\xED\ag\x2\x2\xED"+
		"J\x3\x2\x2\x2\xEE\xEF\at\x2\x2\xEF\xF0\ag\x2\x2\xF0\xF1\as\x2\x2\xF1\xF2"+
		"\aw\x2\x2\xF2\xF3\ak\x2\x2\xF3\xF4\at\x2\x2\xF4\xF5\ag\x2\x2\xF5\xF6\a"+
		"o\x2\x2\xF6\xF7\ag\x2\x2\xF7\xF8\ap\x2\x2\xF8\xF9\av\x2\x2\xF9\xFA\au"+
		"\x2\x2\xFAL\x3\x2\x2\x2\xFB\xFC\av\x2\x2\xFC\xFD\a{\x2\x2\xFD\xFE\ar\x2"+
		"\x2\xFE\xFF\ag\x2\x2\xFF\x100\au\x2\x2\x100N\x3\x2\x2\x2\x101\x102\ar"+
		"\x2\x2\x102\x103\at\x2\x2\x103\x104\ag\x2\x2\x104\x105\a\x66\x2\x2\x105"+
		"\x106\ak\x2\x2\x106\x107\a\x65\x2\x2\x107\x108\a\x63\x2\x2\x108\x109\a"+
		"v\x2\x2\x109\x10A\ag\x2\x2\x10A\x10B\au\x2\x2\x10BP\x3\x2\x2\x2\x10C\x10D"+
		"\a\x63\x2\x2\x10D\x10E\a\x65\x2\x2\x10E\x10F\av\x2\x2\x10F\x110\ak\x2"+
		"\x2\x110\x111\aq\x2\x2\x111\x112\ap\x2\x2\x112\x113\au\x2\x2\x113R\x3"+
		"\x2\x2\x2\x114\x115\ar\x2\x2\x115\x116\a\x63\x2\x2\x116\x117\at\x2\x2"+
		"\x117\x118\a\x63\x2\x2\x118\x119\ao\x2\x2\x119\x11A\ag\x2\x2\x11A\x11B"+
		"\av\x2\x2\x11B\x11C\ag\x2\x2\x11C\x11D\at\x2\x2\x11D\x11E\au\x2\x2\x11E"+
		"T\x3\x2\x2\x2\x11F\x120\ar\x2\x2\x120\x121\at\x2\x2\x121\x122\ag\x2\x2"+
		"\x122\x123\a\x65\x2\x2\x123\x124\aq\x2\x2\x124\x125\ap\x2\x2\x125\x126"+
		"\a\x66\x2\x2\x126\x127\ak\x2\x2\x127\x128\av\x2\x2\x128\x129\ak\x2\x2"+
		"\x129\x12A\aq\x2\x2\x12A\x12B\ap\x2\x2\x12BV\x3\x2\x2\x2\x12C\x12D\ag"+
		"\x2\x2\x12D\x12E\ah\x2\x2\x12E\x12F\ah\x2\x2\x12F\x130\ag\x2\x2\x130\x131"+
		"\a\x65\x2\x2\x131\x132\av\x2\x2\x132X\x3\x2\x2\x2\x133\x134\x5=\x1F\x2"+
		"\x134Z\x3\x2\x2\x2\x135\x136\x5\v\x6\x2\x136\x137\au\x2\x2\x137\x138\a"+
		"v\x2\x2\x138\x139\at\x2\x2\x139\x13A\ak\x2\x2\x13A\x13B\ar\x2\x2\x13B"+
		"\x13C\au\x2\x2\x13C\\\x3\x2\x2\x2\x13D\x13E\x5\v\x6\x2\x13E\x13F\av\x2"+
		"\x2\x13F\x140\a{\x2\x2\x140\x141\ar\x2\x2\x141\x142\ak\x2\x2\x142\x143"+
		"\ap\x2\x2\x143\x144\ai\x2\x2\x144^\x3\x2\x2\x2\x145\x147\t\x4\x2\x2\x146"+
		"\x145\x3\x2\x2\x2\x147\x148\x3\x2\x2\x2\x148\x146\x3\x2\x2\x2\x148\x149"+
		"\x3\x2\x2\x2\x149\x14A\x3\x2\x2\x2\x14A\x14B\b\x30\x2\x2\x14B`\x3\x2\x2"+
		"\x2\v\x2\xB6\xBC\xC6\xCD\xD2\xD5\xDB\x148\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LanguageRecognition
